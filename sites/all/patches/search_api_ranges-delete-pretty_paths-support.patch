Index: sites/all/modules/contrib/search_api_ranges/plugins/facetapi/widget_slider.inc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- sites/all/modules/contrib/search_api_ranges/plugins/facetapi/widget_slider.inc	(revision e0173986e0fc61f8520e868d3ed1bd9440010be4)
+++ sites/all/modules/contrib/search_api_ranges/plugins/facetapi/widget_slider.inc	(revision )
@@ -162,10 +162,6 @@
 
     // Get facet path field/alias
     $range_field = $this->facet['field alias'];
-    if (module_exists('facetapi_pretty_paths')) {
-      $processor = new FacetapiUrlProcessorPrettyPaths($this->facet->getAdapter());
-      $range_field = $processor->getFacetPrettyPathsAlias($this->facet->getFacet());
-    };
 
     // Prepare the slider variables and return themed form
     // @see search-api-ranges-slider.tpl.php
Index: sites/all/modules/contrib/search_api_ranges/search_api_ranges.module
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- sites/all/modules/contrib/search_api_ranges/search_api_ranges.module	(revision e0173986e0fc61f8520e868d3ed1bd9440010be4)
+++ sites/all/modules/contrib/search_api_ranges/search_api_ranges.module	(revision )
@@ -341,10 +341,6 @@
 
   // Get path or facetapi_pretty_paths.
   $path = $variables['target'];
-  if (module_exists('facetapi_pretty_paths')) {
-    $path = request_path();
-    unset($_GET['f']);
-  }
 
   $form['text-range'] = array(
     '#markup' => '<p class="text-range">'
@@ -423,46 +419,24 @@
     $path = request_path();
     $language = NULL;
   }
-  if (module_exists('facetapi_pretty_paths')) {
-    $exists = FALSE;
-    $split_path = explode('/', $path);
-    foreach ($split_path as $key => $value) {
-      if ($value == $range_field) {
-        $exists = $split_path[$key + 1];
-      }
-    }
 
-    // Decision: replace existing range or add new
-    $new_range = '[' . $values['range-from'] . ' TO ' . $values['range-to'] . ']';
-    if ($exists) {
-      $path = str_replace($exists, $new_range, $path);
-    }
-    else {
-      $path .= '/' . $range_field . '/' . $new_range;
-    }
-
-    // Unset non-pretty query
-    unset($params['f']);
-  }
-  else {
-    // Not pretty path logic
-    $query = $range_field . ':' . '[' . $values['range-from'] . ' TO ' . $values['range-to'] . ']';
+  // Not pretty path logic
+  $query = $range_field . ':' . '[' . $values['range-from'] . ' TO ' . $values['range-to'] . ']';
 
-    $pos = -1;
-    if (isset($params['f'])) {
-      foreach ($params['f'] as $key => $param) {
-        if (strpos($param, $range_field . ':') !== FALSE) {
-          $pos = $key;
-        }
-      }
-    }
+  $pos = -1;
+  if (isset($params['f'])) {
+    foreach ($params['f'] as $key => $param) {
+      if (strpos($param, $range_field . ':') !== FALSE) {
+        $pos = $key;
+      }
+    }
+  }
 
-    if ($pos != -1) {
-      $params['f'][$pos] = $query;
-    }
-    else {
-      $params['f'][] = $query;
+  if ($pos != -1) {
+    $params['f'][$pos] = $query;
+  }
+  else {
+    $params['f'][] = $query;
-    }
   }
 
   drupal_goto($path, array('query' => array($params), 'language' => $language));
Index: sites/all/modules/contrib/search_api_ranges/plugins/facetapi/widget_links.inc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- sites/all/modules/contrib/search_api_ranges/plugins/facetapi/widget_links.inc	(revision e0173986e0fc61f8520e868d3ed1bd9440010be4)
+++ sites/all/modules/contrib/search_api_ranges/plugins/facetapi/widget_links.inc	(revision )
@@ -24,12 +24,6 @@
 
     $range_field = $this->facet['field alias'];
 
-    // Get facet path field/alias
-    if (module_exists('facetapi_pretty_paths')) {
-      $processor = new FacetapiUrlProcessorPrettyPaths($this->facet->getAdapter());
-      $range_field = $processor->getFacetPrettyPathsAlias($this->facet->getFacet());
-    };
-
     // Prepare variables for min/max query
     $variables = array(
       'element' => $element,
@@ -49,31 +43,10 @@
       $element = search_api_ranges_generate_ranges_advanced($variables, $this->settings->settings['range_advanced']);
     }
 
-    // Replace ':' with '/'
-    if (module_exists('facetapi_pretty_paths')) {
-      foreach($element as $key => $e){
-        if (isset($e['#query']['f'])){
-          $element[$key]['#query']['f'] = str_replace(':', '/', $e['#query']['f']);
-			if (isset($e['#path']) && isset($element[$key]['#query']['f'][0]) && substr_count($e['#path'],'/'.$element[$key]['#query']['f'][0])>0 ){
-				$element[$key]['#active'] = TRUE;
-				$element[$key]['#path'] = str_replace('/'.$element[$key]['#query']['f'][0],'',$e['#path']);
-				unset($element[$key]['#query']['f']);
-			}
-        }
-      }
-    }
-
     // Sets each item's theme hook, builds item list.
     $this->setThemeHooks($element);
 
     $items_build = $this->buildListItems($element);
-
-    // Replace ?f[0]= with /
-    if (module_exists('facetapi_pretty_paths')) {
-      foreach($items_build as $key => $build){
-        $items_build[$key]['data'] = str_replace('?f[0]=', '/', $build['data']);
-      }
-    }
 
     $element = array(
       '#theme' => 'item_list',
